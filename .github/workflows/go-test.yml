name: go-test

on: [push]

env:
  TEST_RESULTS: /tmp/test-results

jobs:
  go-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 1.25 ]
    
    steps:
      - uses: actions/checkout@v5

      - name: Setup go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}

      - name: Create test directory
        run: |
          mkdir -p ${{ env.TEST_RESULTS }}

      - name: Download go modules
        run: go mod download

      - name: Cache / restore go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      # Check go fmt output because it does not report non-zero when there are fmt changes
      - name: Run gofmt
        run: |
          go fmt ./...
          files=$(go fmt ./...)
            if [ -n "$files" ]; then
              echo "The following file(s) do not conform to go fmt:"
              echo "$files"
              exit 1
            fi

      # Install gotestsum with go get for 1.15.3; otherwise default to go install 
      - name: Install gotestsum
        run: |
          GTS="gotest.tools/gotestsum@latest"
          ERROR="Failed to install $GTS"
          go install "$GTS" || go get "$GTS" || { echo "$ERROR: both 'go install' and 'go get' failed"; exit 1; }
          command -v gotestsum > /dev/null 2>&1 || { echo "$ERROR: gotestsum command not installed"; exit 1; }
          echo "OK: Command 'gotestsum' installed ($GTS)"
      
      - name: Run go tests
        run: |
          gotestsum --format=short-verbose ./...